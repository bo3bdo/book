services:
  #--- Laravel PHP-FPM Application ---
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:cached
      - ./docker/php/conf.d/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - laravel

  #--- Nginx Web Server for Laravel ---
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "8000:80"     # Laravel HTTP
      - "5173:5173"   # Vite dev server
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - laravel

  #--- MySQL Database ---
  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-userpassword}
    volumes:
      - db-data:/var/lib/mysql
      # Mount init scripts to create extra database & grants on first run
      - ./docker/mysql/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - laravel

  #--- Redis ---
  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  #--- Nginx Proxy Manager ---
  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "81:81"     # Admin UI
      - "80:80"     # HTTP proxy
      - "443:443"   # HTTPS proxy
    environment:
      DB_MYSQL_HOST: db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${DB_USERNAME:-user}
      DB_MYSQL_PASSWORD: ${DB_PASSWORD:-userpassword}
      DB_MYSQL_NAME: npm
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    depends_on:
      db:
        condition: service_healthy
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  db-data:
    driver: local
  composer-cache:
    driver: local
  npm_data:
    driver: local
  npm_letsencrypt:
    driver: local